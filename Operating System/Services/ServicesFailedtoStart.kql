let ErrorTable = datatable (Code: string, Message: string ) 
[
"%%1069","The service did not start due to a logon failure.",
"%%1057","The account name is invalid or does not exist, or the password is invalid for the account name specified.",
"%%1331","Account Currently Disabled",
"%%50","Insufficient Rights",
"%%1909","The Referenced account is currently locked out and may not be logged on to.",
"%%8","Not enough memory",
"%%1326","The User Name and password is incorrect",
"%%1787","The security database on the server does not have a computer account for this workstation trust relationship",
"%%1053","The Service did not respond to the start or control request in a timely fashion",
"%%2","The system cannot find the file specified.",
"%%1275","This driver has been blocked from loading",
"%%1455","The paging file is to small for this operation to complete.",
"%%3","The system cannot find the path specified.",
"%%1060","The specified service does not exist as an installed service.",
"%%109","The pipe has been ended."
];
let MessagesBag = toscalar (ErrorTable | extend p = pack(Code, Message) | summarize  dict = make_bag(p));
Event
| where Source == 'Service Control Manager' and EventLog == 'System' and EventID  == 7000 
| project Computer,EventData,TimeGenerated
| extend EventError = parse_xml(EventData)
| extend ErrorCode = (EventError.DataItem.EventData.Data)[1].["#text"],ServiceName = (EventError.DataItem.EventData.Data)[0].["#text"]
| project Computer,ErrorCode,ServiceName,TimeGenerated | extend Message = MessagesBag[tostring(ErrorCode)]